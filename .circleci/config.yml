version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5


jobs:

  test-python:
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>
    environment:
      # cimg/python uses pyenv instead of venv
      VIRTUAL_ENV: ${PYENV_ROOT}
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run: sudo make deps-ubuntu
      - run: make install
      - run: make deps-test
      - run: mkdir test-results
      - run: make test PYTEST_ARGS="-vv --junitxml=test-results/test.xml"
      - store_test_results:
          path: test-results
      - run: make test-cli
      - run: make coverage
      - codecov/upload
    resource_class: large

  build-docker:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      DOCKER_TAG: ocrd/tesserocr
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - setup_remote_docker: # https://circleci.com/docs/2.0/building-docker-images/
          docker_layer_caching: true
      - run: make docker DOCKER_TAG=$DOCKER_TAG
      - run: docker run --rm $DOCKER_TAG ocrd-tesserocr-segment -h

  deploy-docker:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      DOCKER_TAG: ocrd/tesserocr
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - setup_remote_docker: # https://circleci.com/docs/2.0/building-docker-images/
          docker_layer_caching: true
      - run: make docker DOCKER_TAG=$DOCKER_TAG
      - run: docker run --rm $DOCKER_TAG ocrd-tesserocr-segment -h
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login --username "$DOCKERHUB_USER" --password-stdin
      - run: docker push $DOCKER_TAG

  deploy-pypi:
    docker:
      - image: ocrd/tesserocr
    steps:
      - checkout
      - run: pip install twine build
      - run: python -m build .
      - run: twine upload dist/*


workflows:
  build:
    jobs:
      - test-python:
          matrix:
            parameters:
              python-version: ['3.8', '3.9', '3.10', '3.11']
      - build-docker

  deploy:
    when:
      condition:
        equal: [ https://github.com/OCR-D/ocrd_tesserocr, << pipeline.project.git_url >>]
    jobs:
      - deploy-docker:
          filters:
            branches:
              only: master
      - deploy-pypi:
          requires:
            - deploy-docker
          filters:
            branches:
              only: master
