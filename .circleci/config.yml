version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5


jobs:

  test-python:
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>
    environment:
      # cimg/python uses pyenv instead of venv
      VIRTUAL_ENV: ${PYENV_ROOT}
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run: sudo make deps-ubuntu
      - run: make install-tesseract
      - run: make install-tesserocr
      - run: make install
      - run: ocrd resmgr download ocrd-tesserocr-recognize eng.traineddata
      - run: ocrd resmgr download ocrd-tesserocr-recognize osd.traineddata
      - run: ocrd resmgr download ocrd-tesserocr-recognize deu.traineddata
      - run: ocrd resmgr download ocrd-tesserocr-recognize Fraktur.traineddata
      - run: make test-cli
      - run: make coverage
      - codecov/upload

  deploy-docker:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      DOCKER_TAG: ocrd/tesserocr
    steps:
      - checkout
      - setup_remote_docker: # https://circleci.com/docs/2.0/building-docker-images/
          docker_layer_caching: true
      - run: make docker DOCKER_TAG=$DOCKER_TAG
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login --username "$DOCKERHUB_USER" --password-stdin
      - run: docker push $DOCKER_TAG


workflows:
  build:
    jobs:
      - test-python:
          matrix:
            parameters:
              python-version: ['3.7', '3.8', '3.9', '3.10']
  deploy:
    jobs:
      - deploy-docker:
          filters:
            branches:
              only: master
